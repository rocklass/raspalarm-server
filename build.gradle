import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE"
        classpath "com.bmuschko:gradle-docker-plugin:3.0.7"
    }
}

group = "rocklass"

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "com.bmuschko.docker-remote-api"

sourceCompatibility = 1.8
targetCompatibility = 1.8

loadConfiguration()

jar {
    baseName = "raspalarm-server"
    version = "0.1.0"
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile     "org.springframework.boot:spring-boot-starter-web"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

docker {
    url = project.dockerUrl
}

def loadConfiguration() {
    def environment = hasProperty("env") ? env : "dev"

    Properties properties = new Properties()
    properties.load(project.file("src/main/profile/" + environment + "/env.properties").newDataInputStream())
    properties.each { property ->
        project.ext.set(property.key, property.value)
    }
}

task dockerBuildImage(type: DockerBuildImage, dependsOn: ":processDockerRessources") {
    inputDir = project.file("build/docker")
    tag = "rocklass/raspalarm-server"
}

task processDockerRessources(type: Copy, dependsOn: ":build") {
    from ("src/main/docker") {
        filter {
            it.replaceAll("@dockerContainerFrom@", project.dockerContainerFrom as String)
        }
    }
    from ("build/libs") {
        include("*.jar")
    }
    into "build/docker"
}